apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: aksstack.deployment.krateo.io
spec:
  compositeTypeRef:
    apiVersion: deployment.krateo.io/v1alpha1
    kind: AksStack
  resources:
    - base:
        apiVersion: azure.upbound.io/v1beta1
        kind: ProviderConfig
        spec:
          credentials:
            source: Secret
            secretRef:
              namespace: krateo-system
              name: azure-account-creds-secret
              key: credentials
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-azure-pc"
      readinessChecks:
        - type: None
    - base:
        apiVersion: containerservice.azure.upbound.io/v1beta1
        kind: KubernetesCluster
        spec:
          forProvider:
            resourceGroupName: test-rg # patched
            location: West US 2
            kubernetesVersion: "1.24.3"
            defaultNodePool:
              - name: default
                nodeCount: 1 #patched
                vmSize: Standard_B2s #patched
            identity:
              - type: "SystemAssigned"
      patches:
        - fromFieldPath: "metadata.uid"
          toFieldPath: "metadata.labels[deploymentId]"
        - fromFieldPath: spec.values.clusterVersion
          toFieldPath: spec.forProvider.kubernetesVersion
        - fromFieldPath: spec.values.location
          toFieldPath: spec.forProvider.location
        - fromFieldPath: spec.values.resourceGroupName
          toFieldPath: spec.forProvider.resourceGroupName
        - fromFieldPath: spec.values.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-aks"
        - fromFieldPath: spec.values.name
          toFieldPath: spec.forProvider.resourceGroupNameSelector.matchLabels[azure.krateo.io/aksstack]
        - fromFieldPath: spec.values.name
          toFieldPath: spec.forProvider.vnetSubnetIdSelector.matchLabels[azure.krateo.io/aksstack]
        - fromFieldPath: spec.values.name
          toFieldPath: spec.forProvider.dnsPrefix
        - fromFieldPath: spec.values.nodeSize
          toFieldPath: spec.forProvider.defaultNodePool[0].vmSize
        - fromFieldPath: spec.values.clusterNodes
          toFieldPath: spec.forProvider.defaultNodePool[0].nodeCount
        - fromFieldPath: spec.values.namespace
          toFieldPath: spec.writeConnectionSecretToRef.namespace
        - fromFieldPath: spec.values.name
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-aks"
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-azure-pc"
      connectionDetails:
        - fromConnectionSecretKey: kubeconfig
    # - base:
    #     apiVersion: azure.upbound.io/v1beta1
    #     kind: ResourceGroup
    #     spec:
    #       forProvider:
    #         location: West US 2
    #   patches:
    #     - fromFieldPath: spec.values.location
    #       toFieldPath: spec.forProvider.location
    #     - fromFieldPath: spec.values.name
    #       toFieldPath: metadata.name
    #     - fromFieldPath: spec.values.name
    #       toFieldPath: metadata.annotations[upbound.io/external-name]
    #     - fromFieldPath: spec.values.name
    #       toFieldPath: metadata.labels[azure.krateo.io/aksstack]
    #     - fromFieldPath: metadata.name
    #       toFieldPath: spec.providerConfigRef.name
    #       transforms:
    #         - type: string
    #           string:
    #             fmt: "%s-provider-azure-pc"
    # - base:
    #     apiVersion: network.azure.upbound.io/v1beta1
    #     kind: VirtualNetwork
    #     spec:
    #       forProvider:
    #         resourceGroupNameSelector:
    #           matchControllerRef: true
    #         location: West US 2
    #         addressSpace:
    #           - 192.168.0.0/16
    #   patches:
    #     - fromFieldPath: spec.values.location
    #       toFieldPath: spec.forProvider.location
    #     - fromFieldPath: spec.values.name
    #       toFieldPath: metadata.labels[app]
    #     - fromFieldPath: spec.values.name
    #       toFieldPath: metadata.name
    #       transforms:
    #         - type: string
    #           string:
    #             fmt: "%s-vnet"
    #     - fromFieldPath: metadata.name
    #       toFieldPath: spec.providerConfigRef.name
    #       transforms:
    #         - type: string
    #           string:
    #             fmt: "%s-provider-azure-pc"
    # - base:
    #     apiVersion: network.azure.upbound.io/v1beta1
    #     kind: Subnet
    #     spec:
    #       forProvider:
    #         resourceGroupNameSelector:
    #           matchControllerRef: true
    #         virtualNetworkNameSelector:
    #           matchControllerRef: true
    #         addressPrefixes:
    #           - 192.168.1.0/24
    #         serviceEndpoints:
    #           - Microsoft.Sql
    #   patches:
    #     - fromFieldPath: spec.values.name
    #       toFieldPath: metadata.labels[azure.krateo.io/aksstack]
    #     - fromFieldPath: spec.values.name
    #       toFieldPath: metadata.name
    #       transforms:
    #         - type: string
    #           string:
    #             fmt: "%s-sn"
    #     - fromFieldPath: metadata.name
    #       toFieldPath: spec.providerConfigRef.name
    #       transforms:
    #         - type: string
    #           string:
    #             fmt: "%s-provider-azure-pc"
    - base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: Release
        spec:
          rollbackLimit: 3
          forProvider:
            namespace: vault
            chart:
              # from https://github.com/vault-community/helm-charts
              # Note that default values are overridden by the patches below.
              name: vault
              repository: https://helm.releases.hashicorp.com
              version: "0.22.1"
            values:
              server:
                ha:
                  enabled: true
                  replicas: 3
                  raft:
                    enabled: true
                    setNodeId: true
              ui:
                enabled: true
                serviceType: "LoadBalancer"
      patches:
        - fromFieldPath: metadata.name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-vault"
        # All Helm releases derive their labels and annotations from the XR.
        - fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
        - fromFieldPath: "metadata.uid"
          toFieldPath: "metadata.labels[deploymentId]"
        - fromFieldPath: metadata.annotations
          toFieldPath: metadata.annotations
        # All Helm releases derive the ProviderConfig to use from the XR.
        - fromFieldPath: spec.providerConfigRef.name
          toFieldPath: spec.providerConfigRef.name
        # Derive the vault operator image and tag from the XR.
        - fromFieldPath: spec.values.vaultVersion
          toFieldPath: spec.forProvider.chart.version
        # Pass XR namespace to write connection secrets namespace
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.writeConnectionSecretToRef.namespace
        - fromFieldPath: metadata.name
          toFieldPath: spec.providerConfigRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-provider-azure-pc"
